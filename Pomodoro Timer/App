import sys
import time
from PyQt6.QtCore import QTimer, Qt
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QPushButton, QLabel
from PyQt6.QtGui import QFont
from colorama import init, Fore, Style

# Initialize colorama
init(autoreset=True)

class CountdownApp(QWidget):
    def __init__(self):
        super().__init__()

        self.initUI()
        
    def initUI(self):
        self.layout = QVBoxLayout()

        self.label = QLabel("00:00")
        self.label.setFont(QFont('Arial', 48))
        self.label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.layout.addWidget(self.label)

        self.work_button = QPushButton('Start Work Session')
        self.work_button.clicked.connect(lambda: self.start_countdown(25, "Work Session"))
        self.layout.addWidget(self.work_button)

        self.break_button = QPushButton('Start Break')
        self.break_button.clicked.connect(lambda: self.start_countdown(5, "Break"))
        self.layout.addWidget(self.break_button)

        self.setLayout(self.layout)
        
        self.setWindowTitle('Countdown Timer')
        self.setGeometry(300, 300, 300, 200)
        self.show()

    def start_countdown(self, minutes, session_name):
        self.work_button.setDisabled(True)
        self.break_button.setDisabled(True)
        self.seconds = minutes * 60
        self.session_name = session_name
        self.update_timer()
        self.timer = QTimer(self)
        self.timer.timeout.connect(self.update_timer)
        self.timer.start(1000)

    def update_timer(self):
        mins, secs = divmod(self.seconds, 60)
        timer_text = f'{mins:02d}:{secs:02d}'
        self.label.setText(timer_text)

        if self.seconds == 0:
            self.timer.stop()
            self.label.setText(f'{self.session_name} is over!')

            self.work_button.setDisabled(False)
            self.break_button.setDisabled(False)
        else:
            self.seconds -= 1

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = CountdownApp()
    sys.exit(app.exec())
